<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.mapper.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.shop.po.Orders">
		<id column="oid" property="oid" jdbcType="INTEGER" />
		<result column="money" property="money" jdbcType="DOUBLE" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="receiveInfo" property="receiveinfo" jdbcType="VARCHAR" />
		<result column="phoNum" property="phonum" jdbcType="VARCHAR" />
		<result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="accepter" property="accepter" jdbcType="VARCHAR"/>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		oid, money, state, receiveInfo, phoNum, order_time, uid, accepter
	</sql>
	<!--countOrdersByUid -->
	<select id="countOrdersByUid" parameterType="int" resultType="int">
		SELECT count(*) FROM orders WHERE orders.uid=#{value}
	</select>
	<!-- countAllOrders -->
	<select id="countAllOrders" parameterType="int" resultType="int">
		SELECT count(*) FROM orders
	</select>
	<!-- countOrdersByState -->
	<select id="countOrdersByState" parameterType="int" resultType="int">
		SELECT count(*) FROM orders WHERE orders.state=#{value}
	</select>
	<!-- findOrderByUidAndPage -->
	<!-- Integer uid, int page, int limitPage -->
	<resultMap type="orders" id="OrderByUidAndPage">
		<id column="oid" property="oid" jdbcType="INTEGER" />
		<result column="money" property="money" jdbcType="DOUBLE" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="receiveInfo" property="receiveinfo" jdbcType="VARCHAR" />
		<result column="phoNum" property="phonum" jdbcType="VARCHAR" />
		<result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="accepter" property="accepter" jdbcType="VARCHAR"/>
		<collection property="oiList" ofType="com.shop.po.Orderitem">
			<id column="oiid" property="oiid" jdbcType="INTEGER" />
			<result column="count" property="count" jdbcType="INTEGER" />
			<result column="subtotal" property="subtotal" jdbcType="DOUBLE" />
			<result column="pid" property="pid" jdbcType="INTEGER" />
			<result column="oid" property="oid" jdbcType="INTEGER" />
			<association property="product" javaType="com.shop.po.Product">
				<id column="pid" property="pid" jdbcType="INTEGER" />
				<result column="pname" property="pname" jdbcType="VARCHAR" />
				<result column="shop_price" property="shopPrice" jdbcType="DOUBLE" />
				<result column="image" property="image" jdbcType="VARCHAR" />
			</association>
		</collection>
	</resultMap>
	<select id="findOrderByUidAndPage" parameterType="int"
		resultMap="OrderByUidAndPage">
        SELECT orders.*,orderitem.*,product.* FROM 
        (SELECT * FROM orders WHERE orders.uid=#{0} order by order_time DESC  limit #{1},#{2}) AS orders
		,orderitem,product WHERE orders.oid =orderitem.`oid` AND orderitem.`pid`= product.`pid`
	</select>
	
	<select id="findAllOrderByStateAndPage" parameterType="int"
		resultMap="OrderByUidAndPage">
        SELECT orders.*,orderitem.*,product.* FROM 
		 (SELECT * FROM orders WHERE orders.state=#{0} order by order_time DESC  limit #{1},#{2}) AS orders
		,orderitem,product WHERE 
		orders.oid =orderitem.`oid` AND orderitem.`pid`= product.`pid` 
	</select>
	<select id="findAllOrderByPage" parameterType="int"
		resultMap="OrderByUidAndPage">
        SELECT orders.*,orderitem.*,product.* FROM 
         (SELECT * FROM orders order by order_time DESC  limit #{0},#{1}) AS orders
		,orderitem,product WHERE 
		orders.oid =orderitem.`oid` AND orderitem.`pid`= product.`pid`
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.shop.po.OrdersExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="OrderByUidAndPage" parameterType="java.lang.Integer">
		select
		orders.*,orderitem.*,product.* from 
		orders,orderitem,product
		where
		orders.oid =#{value} AND orders.oid=orderitem.oid and  orderitem.`pid`= product.`pid`
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from orders
		where oid = #{oid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.shop.po.OrdersExample">
		delete from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.shop.po.Orders"
		useGeneratedKeys="true" keyProperty="oid">
		insert into orders (oid, money,
		state,
		receiveInfo, phoNum, order_time,
		uid,accepter)
		values
		(#{oid,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE},
		#{state,jdbcType=INTEGER},
		#{receiveinfo,jdbcType=VARCHAR},
		#{phonum,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP},
		#{uid,jdbcType=INTEGER},#{accepter,jdbcType=VARCHAR})

	</insert>
	<insert id="insertSelective" parameterType="com.shop.po.Orders">
		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="oid != null">
				oid,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="receiveinfo != null">
				receiveInfo,
			</if>
			<if test="phonum != null">
				phoNum,
			</if>
			<if test="orderTime != null">
				order_time,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="accepter != null">
				accepter,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="oid != null">
				#{oid,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="receiveinfo != null">
				#{receiveinfo,jdbcType=VARCHAR},
			</if>
			<if test="phonum != null">
				#{phonum,jdbcType=VARCHAR},
			</if>
			<if test="orderTime != null">
				#{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="accepter != null">
				#{accepter,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.shop.po.OrdersExample"
		resultType="java.lang.Integer">
		select count(*) from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update orders
		<set>
			<if test="record.oid != null">
				oid = #{record.oid,jdbcType=INTEGER},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=DOUBLE},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.receiveinfo != null">
				receiveInfo = #{record.receiveinfo,jdbcType=VARCHAR},
			</if>
			<if test="record.phonum != null">
				phoNum = #{record.phonum,jdbcType=VARCHAR},
			</if>
			<if test="record.orderTime != null">
				order_time = #{record.orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=INTEGER},
			</if>
			<if test="record.accepter != null">
				#{record.accepter,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update orders
		set oid = #{record.oid,jdbcType=INTEGER},
		money =
		#{record.money,jdbcType=DOUBLE},
		state =
		#{record.state,jdbcType=INTEGER},
		receiveInfo =
		#{record.receiveinfo,jdbcType=VARCHAR},
		phoNum =
		#{record.phonum,jdbcType=VARCHAR},
		order_time =
		#{record.orderTime,jdbcType=TIMESTAMP},
		uid =
		#{record.uid,jdbcType=INTEGER},
		accepter=
		#{record.accepter,jdbcType=VARCHAR},
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.shop.po.Orders">
		update orders
		<set>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="receiveinfo != null">
				receiveInfo = #{receiveinfo,jdbcType=VARCHAR},
			</if>
			<if test="phonum != null">
				phoNum = #{phonum,jdbcType=VARCHAR},
			</if>
			<if test="orderTime != null">
				order_time = #{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="accepter != null">
				accepter = #{accepter,jdbcType=VARCHAR},
			</if>
		</set>
		where oid = #{oid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.shop.po.Orders">
		update orders
		set
		money = #{money,jdbcType=DOUBLE},
		state = #{state,jdbcType=INTEGER},
		receiveInfo = #{receiveinfo,jdbcType=VARCHAR},
		phoNum =
		#{phonum,jdbcType=VARCHAR},
		order_time =
		#{orderTime,jdbcType=TIMESTAMP},
		uid = #{uid,jdbcType=INTEGER},
		accepter = #{accepter,jdbcType=VARCHAR}
		where oid
		= #{oid,jdbcType=INTEGER}
	</update>
</mapper>