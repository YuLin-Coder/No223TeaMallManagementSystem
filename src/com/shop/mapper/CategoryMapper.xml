<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.mapper.CategoryMapper">
	<resultMap type="com.shop.po.Category" id="BaseResultMap">
		<id column="cid" property="cid" jdbcType="INTEGER" />
		<result column="cname" property="cname" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		cid, cname
	</sql>
	<!-- <resultMap type="com.shop.po.Category" id="lazyLodingResultMap"> 
		<id column="cid" property="cid" /> <result column="cname" property="cname"/> 
		配置二级目录的信息 <collection property="csList" ofType="com.shop.po.Categorysecond" 
		select="com.shop.mapper.CategorysecondMapper.selectByPrimaryKey" column="cid"> 
		</collection> </resultMap> -->
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.shop.po.CategoryExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from category
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<resultMap type="category" id="CategoryAndSecondcategory">
		<id column="cid" property="cid"/>
		<id column="cname" property="cname"/>
		<collection property="csList" ofType="com.shop.po.Categorysecond">
			<id column="csid" property="csid"/>
			<result column="csname" property="csname"/>
			<result column="cid" property="cid"/>
		</collection>
	</resultMap>
	<!-- 自定义的查寻 -->
	<select id="findCategoryAndSecondcategory" resultMap="CategoryAndSecondcategory">
		select
		category.* , categorysecond.* from category , categorysecond where
		category.`cid`=categorysecond.`cid`
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from category
		where cid = #{cid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		category
		where cid = #{cid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.shop.po.CategoryExample">
		delete from category
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.shop.po.Category">
		insert into category (cid,
		cname)
		values (#{cid,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.shop.po.Category">
		insert into category
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				cid,
			</if>
			<if test="cname != null">
				cname,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				#{cid,jdbcType=INTEGER},
			</if>
			<if test="cname != null">
				#{cname,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.shop.po.CategoryExample"
		resultType="java.lang.Integer">
		select count(*) from category
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update category
		<set>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=INTEGER},
			</if>
			<if test="record.cname != null">
				cname = #{record.cname,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update category
		set cid = #{record.cid,jdbcType=INTEGER},
		cname =
		#{record.cname,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.shop.po.Category">
		update category
		<set>
			<if test="cname != null">
				cname = #{cname,jdbcType=VARCHAR},
			</if>
		</set>
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.shop.po.Category">
		update category
		set cname = #{cname,jdbcType=VARCHAR}
		where cid =
		#{cid,jdbcType=INTEGER}
	</update>
</mapper>